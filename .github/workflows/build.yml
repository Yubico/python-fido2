name: build

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.10', '3.11', '3.12', '3.13', 'pypy3.10']
        architecture: [x86, x64]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
          - os: windows-latest
            python: pypy3
          - os: macos-latest
            python: pypy3
          - os: macos-latest
            python: 3.10

    name: ${{ matrix.os }} Py ${{ matrix.python }} ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.architecture }}

      - name: Install system dependencies
        if: "startsWith(matrix.os, 'ubuntu')"
        run: sudo apt-get install -qq libpcsclite-dev

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip setuptools poetry
          poetry install --all-extras

      - name: Run pre-commit
        if: "!startsWith(matrix.python, 'pypy')"
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

      - name: Run unit tests
        run: poetry run pytest --no-device

  build:
    #needs: test
    runs-on: ubuntu-latest
    name: Build Python source .tar.gz

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build source package
        run: |
          python -m pip install --upgrade pip setuptools poetry
          # poetry will by default set all timestamps to 0, which Debian doesn't allow
          export SOURCE_DATE_EPOCH=$(git show --no-patch --format=%ct)
          poetry build

      - name: Upload source package
        uses: actions/upload-artifact@v4
        with:
          name: fido2-python-sdist
          path: dist

  docs:
    runs-on: ubuntu-latest
    name: Build sphinx documentation

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install python dependencies
        run: |
          sudo apt-get install -qq libpcsclite-dev
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --all-extras

      - name: Build sphinx documentation
        run: poetry run make -C docs/ html

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: python-fido2-docs
          path: docs/_build/html
